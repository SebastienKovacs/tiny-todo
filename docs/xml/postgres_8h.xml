<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="postgres_8h" kind="file" language="C++">
    <compoundname>postgres.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">libpq-fe.h</includes>
    <includedby refid="gui_8c" local="yes">src/gui.c</includedby>
    <includedby refid="postgres_8c" local="yes">src/postgres.c</includedby>
    <incdepgraph>
      <node id="32">
        <label>libpq-fe.h</label>
      </node>
      <node id="28">
        <label>src/postgres.h</label>
        <link refid="postgres_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>stdlib.h</label>
      </node>
      <node id="31">
        <label>string.h</label>
      </node>
      <node id="29">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="35">
        <label>src/postgres.c</label>
        <link refid="postgres_8c"/>
      </node>
      <node id="33">
        <label>src/postgres.h</label>
        <link refid="postgres_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>src/gui.c</label>
        <link refid="gui_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="postgres_8h_1a2ebb76a0d0bd2ef4e97f7ffab04557ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_rows</definition>
        <argsstring>(PGresult *res, char *date)</argsstring>
        <name>get_rows</name>
        <param>
          <type>PGresult *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function is very usefull for the times you want to do memory allocation for a pointer to fit a part or the whole database in it. The function returns the number of rows in a table in a db. I use it in the for loops in <ref refid="special__allocs_8c" kindref="compound">special_allocs.c</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/postgres.h" line="9" column="1" bodyfile="src/postgres.c" bodystart="56" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="postgres_8h_1af2d0925e7afa0b5a71432709b6c4305f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_columns</definition>
        <argsstring>(PGresult *res, char *date)</argsstring>
        <name>get_columns</name>
        <param>
          <type>PGresult *</type>
          <declname>res</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as above but with columns instead of rows. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/postgres.h" line="10" column="1" bodyfile="src/postgres.c" bodystart="77" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="postgres_8h_1a0fe4bf1274aa2885b4f2f05722102b8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char ***</type>
        <definition>char*** get_data</definition>
        <argsstring>(char *date)</argsstring>
        <name>get_data</name>
        <param>
          <type>char *</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The big function of this file. It takes the whole table out of the db and puts it in this triple char pointer, aka a string table and return it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/postgres.h" line="11" column="1" bodyfile="src/postgres.c" bodystart="116" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>POSTGRES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POSTGRES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libpq-fe.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="postgres_8h_1a2ebb76a0d0bd2ef4e97f7ffab04557ef" kindref="member">get_rows</ref>(PGresult<sp/>*res,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*date);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="postgres_8h_1af2d0925e7afa0b5a71432709b6c4305f" kindref="member">get_columns</ref>(PGresult<sp/>*res,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*date);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***<ref refid="postgres_8h_1a0fe4bf1274aa2885b4f2f05722102b8d" kindref="member">get_data</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*date);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/postgres.h"/>
  </compounddef>
</doxygen>
